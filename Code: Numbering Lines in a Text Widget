""" 
Tkinter adding line number to text widget

Inspired by: https://stackoverflow.com/questions/16369470/tkinter-adding-line-number-to-text-widget

Changelog: Code updated to prevent the Line Number Canvas from disappearing when the window is resized.
""" 


from tkinter import *


def create_text_line_numbers(canvas, text_widget):
    def redraw(*args):
        # Redraw line numbers
        canvas.delete("all")

        i = text_widget.index("@0,0")
        while True:
            dline = text_widget.dlineinfo(i)
            if dline is None:
                break
            y = dline[1]
            linenum = str(i).split(".")[0]
            canvas.create_text(2, y, anchor="nw", text=linenum)
            i = text_widget.index("%s+1line" % i)

    return redraw


def create_custom_text(root, scrollbar, linenumbers_canvas):
    text = Text(root)

    def proxy(*args):
        # Let the actual widget perform the requested action
        cmd = (text._orig,) + args
        result = text.tk.call(cmd)

        # Generate an event if something was added or deleted,
        # or the cursor position changed
        if (
            args[0] in ("insert", "replace", "delete")
            or args[0:3] == ("mark", "set", "insert")
            or args[0:2] == ("xview", "moveto")
            or args[0:2] == ("xview", "scroll")
            or args[0:2] == ("yview", "moveto")
            or args[0:2] == ("yview", "scroll")
        ):
            text.event_generate("<<Change>>", when="tail")

        # Return what the actual widget returned
        return result

    text._orig = text._w + "_orig"
    text.tk.call("rename", text._w, text._orig)
    text.tk.createcommand(text._w, proxy)
    text.configure(yscrollcommand=scrollbar.set)

    text.grid(row=0, column=1, sticky="nsew")

    root.grid_rowconfigure(0, weight=1, minsize=linenumbers_canvas.winfo_reqheight())
    root.grid_columnconfigure(1, weight=1)

    linenumbers_canvas.grid(row=0, column=0, sticky="nsew")
    linenumbers_canvas.grid_propagate(False)
    linenumbers_canvas.configure(width=30)

    text.bind("<<Change>>", create_text_line_numbers(linenumbers_canvas, text))

    return text


def toggle_linenumbers():
    if linenumbers_button_var.get():
        linenumbers_canvas.grid(row=0, column=0, sticky="nsew")
        root.grid_rowconfigure(0, minsize=linenumbers_canvas.winfo_reqheight())
    else:
        linenumbers_canvas.grid_forget()
        root.grid_rowconfigure(0, minsize=0)


def create_menu():
    menubar = Menu(root)
    root.config(menu=menubar)

    view_menu = Menu(menubar, tearoff=False)
    menubar.add_cascade(label="View", menu=view_menu)

    # Toggle line numbering on and off
    global linenumbers_button_var
    linenumbers_button_var = BooleanVar(value=True)  # Line numbering is on by default
    view_menu.add_checkbutton(
        label="Show Line Numbers",
        variable=linenumbers_button_var,
        onvalue=True,
        offvalue=False,
        command=toggle_linenumbers,
    )

if __name__ == "__main__":
    root = Tk()
    
    # Create scrollbar
    scrollbar = Scrollbar(root)
    scrollbar.grid(row=0, column=2, sticky="ns")
    
    # Create canvas to hold line numbers
    linenumbers_canvas = Canvas(root)
    linenumbers_canvas.grid(row=0, column=0, sticky="nsew")
    
    # Create text widget
    text = create_custom_text(root, scrollbar, linenumbers_canvas)
 
    create_menu()
    
    text.insert("end", "Type some text here...")
        
    root.mainloop()


