"""
Circular Progress Bar

The challenge is to create a circular progress gauge that counts up from 0 to 
100 in Python using the Tkinter library.  Every example of Circular Progress 
Bars I could find on Youtube made use of Pyside or PyQT.  I'm currently teaching
myself Tkinter, and I'm interested in seeing if the same effect can be 
established with plain vanilla Tkinter and some math.
"""

from tkinter import Button, Canvas, Frame, Tk, ttk
from math import cos, radians, sin   # For drawing circles (Thanx Stack Overflow)

def create_window():
    window = Tk()  
    window.title("Demo: Circular Progress Gauge")
    window.geometry("600x600")
    window.configure(bg='#000000')
    # Hide the title bar
    window.overrideredirect(True)

    return window

def update_progress_gauge():
    """
    Draw two concentric circles to act at the guage.  Then, fill the space
    between them as the percent increases from 0 to 100.  May require multiple
    functions.
    """
    global percent
 
    # Draw outlines of graphic guage to be filled
    canvas.create_oval(150, 150, 450, 450, fill="", outline='#009900', width=5)
    canvas.create_oval(180, 180, 420, 420, fill="#000000", outline='#009900', width=5)
    
    # Draw progress bar between gauge outlines
    canvas.create_oval(100, 100, 500, 500, fill="", outline="", width=5)
    canvas.create_line(300, 300, 300 + 150 * sin(radians(percent)),
                       300 - 150 * cos(radians(percent)),
                       fill="red", width=20, tags="progress")
    canvas.create_line(300, 300, 300 + 150 * sin(radians(percent + 8)),
                       300 - 150 * cos(radians(percent + 8)),
                       fill="black", width=20, tags="progress")

def create_progress_gauge():
    percent = 0 # Start countdown from zero

    window = create_window()
    # Start the main event loop
    window.mainloop()
    
    frame = Frame(window, height=600, width=600, bg="#000000", relief="sunken")
    frame.grid(columnspan=2, row=0)    

    canvas = Canvas(frame, bg="#000000", width=585, height=585, relief="raised", bd=1)
    canvas.grid(padx=5, pady=5)

    # Draw Guage
    scale = ttk.Scale(window, orient='horizontal', style="Horizontal.TScale", from_=0, to=360, length=400)
    scale.set(0)
    scale.grid(column=1, row=1, pady=10, padx=5)

    style = ttk.Style()
    style.configure("Horizontal.TScale", background="#000000")

    # Button(window, text="Launch", command=lambda: update_progress_gauge()) 
    
if __name__ == "__main__":
    create_progress_gauge()

