"""
Context Menu (Right Click Menu Popups) With Tkinter

A demonstration of how to create a context menu inside a Tkinter widget.
"""

from tkinter import *

root = Tk()
root.title("Right Click Pop-Up Menu")
root.geometry("500x550")


# ***************** Setting Labels ***************** #

message = Label(root, text="", font=("Helvetica", 30))
message.pack(pady=25)

instructions = Label(root, text ="Right-click to display menu")
instructions.pack()


# ***************** Functions for Menu Options ***************** #

def hello():
    message.config(text="Hello World!", foreground="green")

def goodbye():
    message.config(text="Goodbye World!", foreground="red")

def my_popup(event):
    # Pass in coordinates of mouse
    context_menu.tk_popup(event.x_root, event.y_root)


# ***************** Context Menu ***************** #

# Create a Menu
context_menu = Menu(root, tearoff=False)
context_menu.add_command(label="Say Hello", command=hello)
context_menu.add_command(label="Say Goodbye", command=goodbye)
context_menu.add_separator()
context_menu.add_command(label="Exit", command=root.destroy)


# ***************** Bindings ***************** #

# Bind the mouse click to the menu function
root.bind("<Button-3>", my_popup)

"""
Button-1 = Left mouse button
Button-2 = Center mouse button (Not always available)
Button-3 = Right mouse button
"""

root.mainloop()


#%%

"""
Alternative code:
"""

def create_context_menu():
    global context_menu
    context_menu = Menu(root, tearoff=False)

    context_menu.add_command(label="Cut", accelerator="Ctrl+X", command=cut)
    context_menu.add_command(label="Copy", accelerator="Ctrl+C", command=copy)
    context_menu.add_command(label="Paste", accelerator="Ctrl+V", command=paste)
    context_menu.add_separator()
    context_menu.add_command(label="Select All", accelerator="Ctrl+A", command=select_all)

def cut():
    text.event_generate("<<Cut>>")

def copy():
    text.event_generate("<<Copy>>")

def paste():
    text.event_generate("<<Paste>>")

def select_all():
    text.tag_add("sel", "1.0", "end")

def display_context_menu(event):
    context_menu.post(event.x_root, event.y_root)

# create the text widget
text = create_custom_text(root, linenumbers_canvas)

# create the context menu
create_context_menu()

# bind the context menu to the text widget
text.bind("<Button-3>", display_context_menu)
