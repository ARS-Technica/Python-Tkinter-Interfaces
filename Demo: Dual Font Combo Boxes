"""
A demonstration of how to alter the font and size of text on a text widget with
a pair of combo boxes.  The combo boxes alter all text, not just selected text.
"""

# Effort to apply different combinations of font and font size to different passages of text

import tkinter as tk
from tkinter import ttk
from tkinter import font

global font_counter
font_counter = 0

def update_font(event=None):
    global font_counter
    selected_font = font.Font(family=font_family_combo.get(), size=int(font_size_combo.get()))
    text.tag_configure("custom_font_{}".format(font_counter), font=selected_font)
    apply_font_style()

def apply_font_style(event=None):
    global font_counter

    if text.tag_ranges("sel"):
        start = text.index("sel.first")
        end = text.index("sel.last")
        text.tag_add("custom_font_{}".format(font_counter), start, end)

        # Increment font_counter for next font style
        font_counter += 1

# Create the main window
root = tk.Tk()
root.title("Font Selector")

# Create a text widget to display font changes
text = tk.Text(root, wrap="word")
text.pack(fill="both", expand=True)

# Text for Debugging
text.insert("end", "This first sentence tests the bold formatting feature.\n")
text.insert("end", "\n")
text.insert("end", "This second sentence tests the italics formatting feature.\n")
text.insert("end", "\n")
text.insert("end", "This third sentence demonstrates the ability to underline words.\n")
text.insert("end", "\n")

# Fonts
font_families = list(font.families())

# Create a combo box for font selection
font_family_label = ttk.Label(root, text="Font Family:")
font_family_label.pack()
font_family_combo = ttk.Combobox(root, values=font_families)
font_family_combo.pack()
font_family_combo.set(font_families[0])

# Create a combo box for font size selection
font_size_label = ttk.Label(root, text="Font Size:")
font_size_label.pack()
font_size_combo = ttk.Combobox(root, values=list(range(8, 72)))
font_size_combo.pack()
font_size_combo.set("12")

# Initialize font_counter
font_counter = 0

# Bind events to update the font
font_family_combo.bind("<<ComboboxSelected>>", update_font)
font_size_combo.bind("<<ComboboxSelected>>", update_font)

# Bind event to apply font style when text is selected
text.bind("<<Selection>>", apply_font_style)

root.mainloop()

