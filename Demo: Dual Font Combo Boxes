"""
A demonstration of how to alter the font and size of text on a text widget with
a pair of combo boxes.  The combo boxes alter all text, not just selected text.
"""

# Effort to apply different combinations of font and font size to different passages of text

import tkinter as tk
from tkinter import ttk
from tkinter import font

def update_font(event=None):
    selected_font = font.Font(family=font_family_combo.get(), size=int(font_size_combo.get()))
    text.tag_configure("custom_font", font=selected_font)

def apply_font_style():
    start = text.index("sel.first")
    end = text.index("sel.last")
    tag_name = f"style_{start}_{end}"
    text.tag_configure(tag_name, font=(font_family_combo.get(), int(font_size_combo.get())))
    text.tag_add(tag_name, start, end)

# Create the main window
root = tk.Tk()
root.title("Font Selector")

# Create a text widget to display font changes
text = tk.Text(root, wrap="word")
text.pack(fill="both", expand=True)

# Fonts
font_families = list(font.families())

# Create a combo box for font selection
font_family_label = ttk.Label(root, text="Font Family:")
font_family_label.pack()
font_family_combo = ttk.Combobox(root, values=font_families)
font_family_combo.pack()
font_family_combo.set(font_families[0])

# Create a combo box for font size selection
font_size_label = ttk.Label(root, text="Font Size:")
font_size_label.pack()
font_size_combo = ttk.Combobox(root, values=list(range(8, 72)))
font_size_combo.pack()
font_size_combo.set("12")

# Bind events to update the font
font_family_combo.bind("<<ComboboxSelected>>", update_font)
font_size_combo.bind("<<ComboboxSelected>>", update_font)

# Bind event to apply font style when text is selected
text.bind("<FocusOut>", lambda event: apply_font_style())

root.mainloop()

