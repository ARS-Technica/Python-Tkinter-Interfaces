"""
A demonstration of how to make a simple hamburger menu common in mobile apps
using only Python's Tkinter library.
"""

import tkinter as tk
from tkinter import PhotoImage
from PIL import Image, ImageDraw, ImageTk  # For Close ("X") icon

button_state = False
page_frame = None

def create_hamburger_icon():
    icon = Image.new("RGBA", (32, 32), (0, 0, 0, 0))
    draw = ImageDraw.Draw(icon)
    draw.line((5, 12, 27, 12), fill="black", width=3)
    draw.line((5, 18, 27, 18), fill="black", width=3)
    draw.line((5, 24, 27, 24), fill="black", width=3)
    icon_photo = ImageTk.PhotoImage(icon)
    return icon_photo

def create_close_icon():
    icon = Image.new("RGBA", (32, 32), (0, 0, 0, 0))
    draw = ImageDraw.Draw(icon)
    draw.line((5, 5, 27, 27), fill="black", width=3)
    draw.line((5, 27, 27, 5), fill="black", width=3)
    icon_photo = ImageTk.PhotoImage(icon)
    return icon_photo

def create_navigation_buttons(frame, switch_page_func):
    buttons = []

    def on_enter(event):
        event.widget.config(bg="#e0e0e0")  # Change background color on mouse enter

    def on_leave(event):
        event.widget.config(bg="white")  # Change background color on mouse leave

    button_width = 15  # Set a fixed width for the buttons
    
    # Page Links to be listed in navigation_frame
    navigation_menu = [(home_page, "Home"), (first_page, "First Page"), 
                       (second_page, "Second Page"), (third_page, "Third Page")]

    for page_func, text in navigation_menu:
        button = tk.Button(frame, text=text, font=("Arial", 13, "bold"),
                           bd=0, relief=tk.SOLID, bg="white", fg="black", 
                           command=lambda func=page_func: switch_page_func(func), width=button_width)
        button.bind("<Enter>", on_enter)
        button.bind("<Leave>", on_leave)
        button.pack(fill=tk.X, pady=5)
        buttons.append(button)

    return buttons

def menu_toggle():
    global button_state
    
    if button_state is True:
        # Create animated Navbar closing:
        for x in range(251):
            navigation_frame.place(x=-x, y=0)
            right_navigation_frame.update()
            top_border_frame.update()

        # Resetting widget colors:
        header_label.config(bg="orange")
        top_border_frame.config(bg="orange")
        root.config(bg="white")

        # Lifting navigation_frame above other frames
        navigation_frame.lift()

        # Turning button OFF:
        button_state = False
    else:
        # Dim the color scheme within the root frame:
        header_label.config(bg="#252726", fg="white")
        top_border_frame.config(bg="#252726")
        root.config(bg="#252726")

        # Created animated Navbar opening:
        for x in range(-250, 0):
            navigation_frame.place(x=x, y=0)
            right_navigation_frame.update()
            top_border_frame.update()

        # Lifting navigation_frame to be above other frames
        navigation_frame.lift()

        # Turning button ON:
        button_state = True

        # Animate button placement
        for button in navigation_buttons:
            button.place(x=20, y=60 + navigation_buttons.index(button) * 25)

def switch_page(page_function):
    global page_frame
    
    if page_frame:
        page_frame.destroy()  # Destroy the existing page_frame

    page_frame = page_function()  # Create the new page
    page_frame.pack(fill=tk.BOTH, expand=True)

    navigation_frame.lift()  # Bring the navigation_frame to the top

def home_page():
    home_page_frame = tk.Frame(root, bg="white")

    home_page_label = tk.Label(home_page_frame, text='Home Page', font=('Arial', 25), fg="black", bg="white")
    home_page_label.pack(pady=25)
    
    home_page_text = tk.Label(home_page_frame, text="Click on the menu above to change frames!", font=('Arial', 12), fg="black", bg="white")
    home_page_text.pack(pady=25)
    
    return home_page_frame  

def first_page():
    first_page_frame = tk.Frame(root, bg="white")
    first_page_label = tk.Label(first_page_frame, text='First Page', font=('Arial', 25), fg="black", bg="white")
    first_page_label.pack(pady=25)
    first_page_text_widget = tk.Text(first_page_frame, wrap=tk.WORD, width=50, height=30, bg="grey") #bg=root.cget("bg")) 
    first_page_text_widget.insert(tk.END, "Content for the first page.")
    first_page_text_widget.pack(pady=15)

    return first_page_frame

def second_page():
    second_page_frame = tk.Frame(root, bg="white")
    second_page_label = tk.Label(second_page_frame, text='Second Page', font=('Arial', 25), fg="black", bg="white")
    second_page_label.pack(pady=25)
    second_page_text_widget = tk.Text(second_page_frame, wrap=tk.WORD, width=50, height=30, bg="grey") #bg=root.cget("bg"))
    second_page_text_widget.insert(tk.END, "Content for the second page.")
    second_page_text_widget.pack(pady=15)
    second_page_label = tk.Label(second_page_frame, text='Second Page', font=('Arial', 25), fg="black", bg="white")
    second_page_label.pack(pady=25)

    return second_page_frame

def third_page():
    third_page_frame = tk.Frame(root, bg="white")
    third_page_label = tk.Label(third_page_frame, text='Third Page', font=('Arial', 25), fg="black", bg="white")
    third_page_label.pack(pady=25)
    third_page_text_widget = tk.Text(third_page_frame, wrap=tk.WORD, width=50, height=30, bg="grey") #bg=root.cget("bg"))
    third_page_text_widget.insert(tk.END, "Content for the third page.")
    third_page_text_widget.pack(pady=15)
    third_page_label = tk.Label(third_page_frame, text='Third Page', font=('Arial', 25), fg="black", bg="white")
    third_page_label.pack(pady=25)

    return third_page_frame


root = tk.Tk()
root.title("Tkinter Hamburger Menu") 
root.geometry("500x500")

menu_icon = create_hamburger_icon()
close_icon = create_close_icon()

top_border_frame = tk.Frame(root, bg="orange", height=10)
top_border_frame.pack(fill=tk.X, side="top")
top_border_frame_2 = tk.Frame(root, bg="black", height=5)
top_border_frame_2.pack(fill=tk.X, side="top")

header_label = tk.Label(top_border_frame, text="LOGO", font=("Arial", 13, "bold"), bg="orange", fg="black", height=2, padx=20)
header_label.pack(side="right")
 
navigation_button = tk.Button(top_border_frame, image=menu_icon, bg="orange", activebackground="orange", bd=0, padx=20, command=menu_toggle)
navigation_button.place(x=10, y=5)

main_frame = tk.Frame(root, bg="white") 
main_frame.place()

navigation_frame = tk.Frame(root, bg="white", height=1000, width=200)
navigation_frame.place(x=-250, y=0)

# This line creates the orange strip at the top of the Navigation Frame
tk.Label(navigation_frame, font=('Arial', 13), bg="orange", fg="black", height=2, width=250, padx=20).place(x=0, y=0)

# This line creates the black line beneath the orange strip (adjust the height for thickness)
line_frame = tk.Frame(navigation_frame, bg="black", height=5, width=250)
line_frame.place(x=0, y=44)  # Adjusted height

# Creates a vertical black border on the right side of the Navigation Frame
right_navigation_frame = tk.Frame(navigation_frame, bg="black", width=5, height=1000)
right_navigation_frame.place(x=195, y=0) 
right_navigation_frame.lift()  # Lift right_navigation_frame to the top

# Create navigation buttons using the function
navigation_buttons = create_navigation_buttons(navigation_frame, switch_page)

# Initially place buttons off-screen
for button in navigation_buttons:
    button.place(x=-230, y=60 + navigation_buttons.index(button) * 25)

close_button = tk.Button(navigation_frame, image=close_icon,  bg="orange", activebackground="orange", bd=0, padx=20, command=menu_toggle)
close_button.pack()
close_button.place(x=150, y=5)

if __name__ == "__main__":
    switch_page(home_page)  # Default landing page
    root.mainloop()

