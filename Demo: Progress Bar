"""
Demonstration of a basic Progress Bar
"""

import time
import threading
import tkinter as tk
from tkinter import *
from tkinter import font
from tkinter import ttk

root = tk.Tk()
percentage = IntVar()
pause = 0

def progress_bar_thread():
    global pause

    pause = 0  # To resume progress bar
    thread1 = threading.Thread(target=start_progress_bar)
    thread1.start()

def restart_progress_bar():
    global pause

    pause = 0
    percentage.set(0) # Start from the beginning
    thread = threading.Thread(target=start_progress_bar)
    thread.start()

    restart_button.pack_forget()
    stop_button.pack(side=RIGHT, padx=10, pady=10)

def start_progress_bar():
    global percentage, pause, percentage_label

    delay = 0.03
    total_steps = 100

    # When resuming progress bar, start where the progress left off
    if percentage.get() > 0:
        start_value = percentage.get()
    else:
        start_value = 0

    for i in range(start_value, total_steps + 1):  # Use start_value rather than 0 in case of resume
        if pause == 1:
            break
        else:
            percentage.set(i)
            time.sleep(delay)

            # Update the label with both variable value and fixed text
            percentage_label_var.set(f"{percentage.get()}%")

    if percentage.get() == 100:
        stop_button.pack_forget()
        restart_button.pack(side=RIGHT, padx=10, pady=10)

def stop_progress_bar():
    global pause

    pause = 1

def window():
    global percentage_label_var, restart_button, start_button, stop_button

    # ------ Progress Bar Widget ----- #
    
    progress_bar = ttk.Progressbar(root, max=100.0, variable=percentage, length=400)
    progress_bar.pack(pady=10)

    # Create a StringVar to hold the text for the label
    percentage_label_var = StringVar()
    percentage_label_var.set("0%")  # Initialize with 0%

    percentage_label = Label(root, textvariable=percentage_label_var, font="arial 15 bold")
    percentage_label.pack()


    # ----- Button Widgets -----#

    frame_buttons = Frame(root)  # Create a frame to hold the buttons
    frame_buttons.pack(pady=10)
    
    # Set the width of the buttons to prevent them from changing positions when Stop becomes Restart
    button_width = 10

    start_button = Button(frame_buttons, text="Start", font=("Arial", 12), command=progress_bar_thread, width=button_width)
    start_button.pack(side=LEFT, padx=10, pady=10)

    stop_button = Button(frame_buttons, text="Stop", font=("Arial", 12), command=stop_progress_bar, width=button_width)
    stop_button.pack(side=RIGHT, padx=10, pady=10)

    restart_button = Button(frame_buttons, text="Restart", font=("Arial", 12), command=restart_progress_bar, width=button_width)

if __name__ == "__main__":
    root.geometry("500x150")
    root.title("Progress Bar Demonstration")

    window()
    root.mainloop()

