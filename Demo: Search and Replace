"""
A Simple set of Functions to act as a Search and Replace feature inside a Notebook app.
"""

from tkinter import *

def find_and_replace():
    dialog = Toplevel(root)
    dialog.title("Find and Replace")
    
    def find_next():
        find_text = find_entry.get()
        if find_text:
            search_options = re.I if not match_case_var.get() else 0
            whole_word = "\\b" + find_text + "\\b" if whole_words_var.get() else find_text
            pattern = re.compile(whole_word, search_options)
            matches = pattern.finditer(text.get("1.0", "end-1c"))
            try:
                match = next(matches)
                start = match.start()
                end = match.end()
                text.tag_remove('found', '1.0', "end-1c")
                text.tag_add('found', f"1.0+{start}c", f"1.0+{end}c")
                text.see(f"1.0+{start}c")
                find_entry.focus_set()
            except StopIteration:
                pass
    
    def find_all():
        find_text = find_entry.get()
        if find_text:
            search_options = re.I if not match_case_var.get() else 0
            whole_word = "\\b" + find_text + "\\b" if whole_words_var.get() else find_text
            pattern = re.compile(whole_word, search_options)
            matches = pattern.finditer(text.get("1.0", "end-1c"))
            text.tag_remove('found', '1.0', "end-1c")
            for match in matches:
                start = match.start()
                end = match.end()
                text.tag_add('found', f"1.0+{start}c", f"1.0+{end}c")
            find_entry.focus_set()
    
    def replace():
        find_text = find_entry.get()
        replace_text = replace_entry.get()
        if find_text and replace_text:
            search_options = re.I if not match_case_var.get() else 0
            whole_word = "\\b" + find_text + "\\b" if whole_words_var.get() else find_text
            pattern = re.compile(whole_word, search_options)
            text_content = text.get("1.0", "end-1c")
            updated_content, num_replacements = pattern.subn(replace_text, text_content)
            text.delete("1.0", "end-1c")
            text.insert("1.0", updated_content)
            if num_replacements > 0:
                text.tag_remove('found', '1.0', "end-1c")
            find_entry.focus_set()
    
    def replace_all():
        find_text = find_entry.get()
        replace_text = replace_entry.get()
        if find_text and replace_text:
            search_options = re.I if not match_case_var.get() else 0
            whole_word = "\\b" + find_text + "\\b" if whole_words_var.get() else find_text
            pattern = re.compile(whole_word, search_options)
            text_content = text.get("1.0", "end-1c")
            updated_content, num_replacements = pattern.subn(replace_text, text_content)
            text.delete("1.0", "end-1c")
            text.insert("1.0", updated_content)
            text.tag_remove('found', '1.0', "end-1c")
            find_entry.focus_set()
    
    find_label = Label(dialog, text="Find:")
    find_label.grid(row=0, column=0, padx=5, pady=5, sticky=W)
    find_entry = Entry(dialog)
    find_entry.grid(row=0, column=1, padx=5, pady=5)
    
    find_button = Button(dialog, text="Find Next", command=find_next)
    find_button.grid(row=0, column=2, padx=5, pady=5)
    
    find_all_button = Button(dialog, text="Find All", command=find_all)
    find_all_button.grid(row=0, column=3, padx=5, pady=5)
    
    replace_label = Label(dialog, text="Replace:")
    replace_label.grid(row=1, column=0, padx=5, pady=5, sticky=W)
    replace_entry = Entry(dialog)
    replace_entry.grid(row=1, column=1, padx=5, pady=5)
    
    replace_button = Button(dialog, text="Replace", command=replace)
    replace_button.grid(row=1, column=2, padx=5, pady=5)
    
    replace_all_button = Button(dialog, text="Replace All", command=replace_all)
    replace_all_button.grid(row=1, column=3, padx=5, pady=5)
    
    match_case_var = IntVar()
    match_case_check = Checkbutton(dialog, text="Match Case", variable=match_case_var)
    match_case_check.grid(row=2, column=0, padx=5, pady=5, columnspan=2, sticky=W)
    
    whole_words_var = IntVar()
    whole_words_check = Checkbutton(dialog, text="Whole Words", variable=whole_words_var)
    whole_words_check.grid(row=2, column=2, padx=5, pady=5, columnspan=2)
    
    find_entry.focus_set()

root = Tk()
text = Text(root)
text.insert('1.0', '''Type your text here''')
text.pack(side=BOTTOM)

menu_bar = Menu(root)
root.config(menu=menu_bar)
submenu = Menu(menu_bar, tearoff=0)
menu_bar.add_cascade(label="Options", menu=submenu)
submenu.add_command(label="Search and Replace", command=find_and_replace)

root.mainloop()

