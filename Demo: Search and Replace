"""
A Simple set of Functions to act as a Search and Replace feature inside a Notebook app.
"""

from tkinter import *

def find_and_replace():
    dialog = Toplevel(root)
    dialog.title("Find and Replace")
    
    find_term = StringVar()
    replace_term = StringVar()
    match_case = IntVar()
    whole_words = IntVar()
    
    def find():
        text_widget = text
        find_term_entry = find_term.get()
        start = "1.0"
        while True:
            start = text_widget.search(find_term_entry, start, nocase=not match_case.get(), stopindex="end")
            if not start:
                break
            end = text_widget.index(f"{start}+{len(find_term_entry)}c")
            text_widget.tag_add("found", start, end)
            start = end
            break  # Stop after finding the first instance
        text_widget.tag_config("found", background="yellow", foreground="green")
    
    def find_all():
        text_widget = text
        find_term_entry = find_term.get()
        start = "1.0"
        while True:
            start = text_widget.search(find_term_entry, start, nocase=not match_case.get(), stopindex="end")
            if not start:
                break
            end = text_widget.index(f"{start}+{len(find_term_entry)}c")
            text_widget.tag_add("found", start, end)
            start = end
        text_widget.tag_config("found", background="yellow", foreground="green")
    
    def replace():
        text_widget = text
        find_term_entry = find_term.get()
        replace_term_entry = replace_term.get()
        start = "1.0"
        while True:
            start = text_widget.search(find_term_entry, start, nocase=not match_case.get(), stopindex="end")
            if not start:
                break
            end = text_widget.index(f"{start}+{len(find_term_entry)}c")
            text_widget.delete(start, end)
            text_widget.insert(start, replace_term_entry)
            start = end
            text_widget.tag_remove("found", start, end)
    
    def replace_all():
        text_widget = text
        find_term_entry = find_term.get()
        replace_term_entry = replace_term.get()
        start = "1.0"
        while True:
            start = text_widget.search(find_term_entry, start, nocase=not match_case.get(), stopindex="end")
            if not start:
                break
            end = text_widget.index(f"{start}+{len(find_term_entry)}c")
            text_widget.delete(start, end)
            text_widget.insert(start, replace_term_entry)
            start = end
            text_widget.tag_remove("found", start, end)
    
    Label(dialog, text="Find: ").grid(row=0, column=0, padx=5, pady=5, sticky=W)
    Entry(dialog, textvariable=find_term).grid(row=0, column=1, padx=5, pady=5)
    Button(dialog, text="Find", command=find, width=10).grid(row=0, column=2, padx=5, pady=5)
    Button(dialog, text="Find All", command=find_all, width=10).grid(row=0, column=3, padx=5, pady=5)
    
    Label(dialog, text="Replace: ").grid(row=1, column=0, padx=5, pady=5, sticky=W)
    Entry(dialog, textvariable=replace_term).grid(row=1, column=1, padx=5, pady=5)
    Button(dialog, text="Replace", command=replace, width=10).grid(row=1, column=2, padx=5, pady=5)
    Button(dialog, text="Replace All", command=replace_all, width=10).grid(row=1, column=3, padx=5, pady=5)
    
    Checkbutton(dialog, text="Match Case", variable=match_case).grid(row=0, column=4, padx=5, pady=5, sticky=W)
    Checkbutton(dialog, text="Whole Words", variable=whole_words).grid(row=1, column=4, padx=5, pady=5, sticky=W)
    
    find_term.set('')
    replace_term.set('')

root = Tk()
text = Text(root)
text.insert('1.0', '''Type your text here''')
text.pack(side=BOTTOM)

menu_bar = Menu(root)
root.config(menu=menu_bar)
submenu = Menu(menu_bar, tearoff=0)
menu_bar.add_cascade(label="Options", menu=submenu)
submenu.add_command(label="Search and Replace", command=find_and_replace)

root.mainloop()

