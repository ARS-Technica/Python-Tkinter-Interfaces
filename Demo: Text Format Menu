"""
A demonstration of how the text formatting section of a text editor's toolbar should work.
"""

from tkinter import *
from tkinter import ttk
from tkinter.font import families

# Set default font
current_font = "Helvetica"
current_size = 16
is_bold = False
is_italic = False
is_underline = False

# Function to change the font
def change_font():
    global current_font
    global current_size
    selected_font = font_var.get()
    selected_size = size_var.get()
    current_font = selected_font
    current_size = int(selected_size)
    my_text.configure(font=(current_font, current_size))

# Function to toggle bold text
def toggle_bold():
    global is_bold
    is_bold = not is_bold
    update_text_formatting()

# Function to toggle italic text
def toggle_italic():
    global is_italic
    is_italic = not is_italic
    update_text_formatting()

# Function to toggle underline text
def toggle_underline():
    global is_underline
    is_underline = not is_underline
    update_text_formatting()

# Function to update text formatting
def update_text_formatting():
    font = (current_font, current_size)
    if is_bold:
        font += ("bold",)
    if is_italic:
        font += ("italic",)

    # Create a tag for underlining
    if is_underline:
        my_text.tag_configure("underline", underline=True)
    else:
        my_text.tag_configure("underline", underline=False)

    # Apply the font and underlining tag to selected text
    my_text.tag_add("font_tag", "1.0", "end")
    my_text.tag_remove("underline", "1.0", "end")
    if is_underline:
        my_text.tag_add("underline", my_text.index(INSERT), my_text.index(INSERT))
    
    # Apply the tags
    my_text.tag_configure("font_tag", font=font)

# Create the main window
root = Tk()
root.title("Text Editor")

# Set the fixed window size
root.geometry("800x600")

# Create a toolbar with formatting options above the text widget
toolbar = ttk.Frame(root)
toolbar.pack(side="top", fill="x")

# Create font dropdown menu
font_var = StringVar()
font_var.set(current_font)
font_dropdown = ttk.Combobox(toolbar, textvariable=font_var, values=families(), state="readonly")
font_dropdown.grid(row=0, column=0, padx=5)
font_dropdown.bind("<<ComboboxSelected>>", lambda event: change_font())

# Create font size dropdown menu
size_var = StringVar()
size_var.set(str(current_size))
size_dropdown = ttk.Combobox(toolbar, textvariable=size_var, values=["8", "9", "10", "11", "12", "14", "16", "18", "20", "22", "24", "26", "28", "36", "48", "72"], state="readonly")
size_dropdown.grid(row=0, column=1, padx=5)
size_dropdown.bind("<<ComboboxSelected>>", lambda event: change_font())

# Create bold, italic, and underline buttons
bold_button = Button(toolbar, text="Bold", command=toggle_bold)
italic_button = Button(toolbar, text="Italic", command=toggle_italic)
underline_button = Button(toolbar, text="Underline", command=toggle_underline)

bold_button.grid(row=0, column=2, padx=5)
italic_button.grid(row=0, column=3, padx=5)
underline_button.grid(row=0, column=4, padx=5)

# Create a Text widget with a fixed size
my_text = Text(root, font=(current_font, current_size), width=100, height=30)
my_text.pack(fill="both", expand=True)

# Start the main event loop
root.mainloop()

