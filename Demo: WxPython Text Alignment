"""
After repeated failures to find a method of reliably justifying text in Tknter's 
text widget, I'm now attempting to create a simple Notepad application in Python 
using the wxPython TextCtrl widget to support justified text alignment through the 
StyleTextCtrl class.  I found this suggestion on Reddit.

Having never used wxPython, this code is going to be a blend of Stackforum code and
ChatGPT suggestions.
"""


import wx
import wx.richtext as rt

def on_align(event, rich_text_ctrl, alignment):
    if rich_text_ctrl.HasSelection():
        rich_text_ctrl.BeginAlignment(alignment)
        rich_text_ctrl.EndAlignment()
    else:
        wx.MessageBox("Please select text to align.", "Info", wx.OK | wx.ICON_INFORMATION)

def create_menu_bar(frame, rich_text_ctrl):
    menubar = wx.MenuBar()

    format_menu = wx.Menu()
    left_align = format_menu.Append(wx.ID_ANY, "Left Align")
    center_align = format_menu.Append(wx.ID_ANY, "Center Align")
    right_align = format_menu.Append(wx.ID_ANY, "Right Align")
    justify_align = format_menu.Append(wx.ID_ANY, "Justify")

    frame.Bind(wx.EVT_MENU, lambda event: on_align(event, rich_text_ctrl, wx.TEXT_ALIGNMENT_LEFT), left_align)
    frame.Bind(wx.EVT_MENU, lambda event: on_align(event, rich_text_ctrl, wx.TEXT_ALIGNMENT_CENTRE), center_align)
    frame.Bind(wx.EVT_MENU, lambda event: on_align(event, rich_text_ctrl, wx.TEXT_ALIGNMENT_RIGHT), right_align)
    frame.Bind(wx.EVT_MENU, lambda event: on_align(event, rich_text_ctrl, wx.TEXT_ALIGNMENT_JUSTIFIED), justify_align)

    menubar.Append(format_menu, "Format")
    frame.SetMenuBar(menubar)

def main():
    app = wx.App(False)
    frame = wx.Frame(None, wx.ID_ANY, "Simple Text Editor", size=(800, 600))
    
    rich_text_ctrl = rt.RichTextCtrl(frame, style=wx.TE_MULTILINE | wx.TE_RICH2)
    
    create_menu_bar(frame, rich_text_ctrl)

    frame.Show()
    app.MainLoop()

if __name__ == "__main__":
    main()

