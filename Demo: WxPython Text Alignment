"""
After repeated failures to find a method of reliably justifying text in Tknter's 
text widget, I'm now attempting to create a simple Notepad application in Python 
using the wxPython TextCtrl widget to support justified text alignment through the 
StyleTextCtrl class.  I found this suggestion on Reddit.

Having never used wxPython, this code is going to be a blend of Stackforum code and
ChatGPT suggestions.
"""


import tkinter as tk
from tkinter import ttk
import wx
import wx.stc

def left_align():
    text.tag_configure("left", justify='left')

def center_align():
    text.tag_configure("center", justify='center')

def right_align():
    text.tag_configure("right", justify='right')

def justify():
    text.tag_configure("justify", justify='justify')

def on_apply_alignment(alignment):
    selected_text = text.tag_ranges(tk.SEL)
    if selected_text:
        text.tag_add(alignment, selected_text[0], selected_text[1])

def create_menu():
    menubar = tk.Menu(root)
    format_menu = tk.Menu(menubar, tearoff=0)
    format_menu.add_command(label="Left Align", command=lambda: on_apply_alignment("left"))
    format_menu.add_command(label="Center Align", command=lambda: on_apply_alignment("center"))
    format_menu.add_command(label="Right Align", command=lambda: on_apply_alignment("right"))
    format_menu.add_command(label="Justify", command=lambda: on_apply_alignment("justify"))
    menubar.add_cascade(label="Format", menu=format_menu)
    root.config(menu=menubar)

root = tk.Tk()
root.title("Simple Text Editor")

# Create text widget
text = tk.Text(root, wrap='word')
text.pack(fill='both', expand=True)

# Create menu
create_menu()

root.mainloop()

